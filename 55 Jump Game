// Solution 1 : 

class Solution {
public:
    bool canJump(vector<int>& nums) {
        int n=nums.size();
        vector<int> dp(n);
        dp[0]=nums[0];
        for(int i=1;i<n;i++){
            if(dp[i-1]<i) return false;
            dp[i]=max(dp[i-1],i+nums[i]);
        }
        return true;
    }
};


// Solution 2 :

class Solution {
public:
    bool canJump(vector<int>& nums) {
        int n=nums.size()-1;
        int maxi=0;
        for(int i=0;i<n;i++){
            if(nums[i]==0 and maxi<=i) break;
            maxi=max(maxi,i+nums[i]);
        }
        return maxi>=n;
    }
};
